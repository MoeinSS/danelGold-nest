{"version":3,"sources":["../src/main.ts"],"sourcesContent":["import { NestFactory } from '@nestjs/core';\r\nimport { AppModule } from './app.module';\r\nimport { ValidationPipe } from '@nestjs/common';\r\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\r\nimport passport from 'passport';\r\nimport { SwaggerHelper } from '@/common/utils/swagger.utils';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule, {});\r\n  app.enableCors({ origin: true, credentials: true });\r\n\r\n  app.useGlobalPipes(\r\n    new ValidationPipe({\r\n      whitelist: true,\r\n      forbidNonWhitelisted: true,\r\n      transform: true,\r\n    }),\r\n  );\r\n\r\n  app.use(passport.initialize());\r\n\r\n  const config = new DocumentBuilder()\r\n    .setTitle('Danel Gold')\r\n    .setDescription('project danel gold api')\r\n    .setVersion('1.0')\r\n    .addTag('DanelGold')\r\n    .addBearerAuth()\r\n    .build();\r\n\r\n  const document = SwaggerModule.createDocument(app, config);\r\n  SwaggerModule.setup('/api', app, document);\r\n  await new SwaggerHelper().setup(app);\r\n  await app.listen(process.env.PORT, '0.0.0.0');\r\n  console.log(`running on port ${process.env.PORT}...`);\r\n\r\n  function bytesToMB(bytes) {\r\n    return bytes / (1024 * 1024); \r\n  }\r\n\r\n  const memoryUsage = process.memoryUsage();\r\n\r\n  const rssMB = bytesToMB(memoryUsage.rss);\r\n  const heapTotalMB = bytesToMB(memoryUsage.heapTotal);\r\n  const heapUsedMB = bytesToMB(memoryUsage.heapUsed);\r\n  const externalMB = bytesToMB(memoryUsage.external);\r\n  const arrayBuffersMB = bytesToMB(memoryUsage.arrayBuffers);\r\n\r\n  const totalMemoryMB =\r\n    rssMB + heapTotalMB + heapUsedMB + externalMB + arrayBuffersMB;\r\n\r\n  console.log({\r\n    totalMemory: totalMemoryMB.toFixed(2) + ' MB',\r\n  });\r\n}\r\n\r\nbootstrap();\r\nfunction metadata(): Promise<Record<string, any>> {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"],"names":["bootstrap","app","NestFactory","create","AppModule","enableCors","origin","credentials","useGlobalPipes","ValidationPipe","whitelist","forbidNonWhitelisted","transform","use","passport","initialize","config","DocumentBuilder","setTitle","setDescription","setVersion","addTag","addBearerAuth","build","document","SwaggerModule","createDocument","setup","SwaggerHelper","listen","process","env","PORT","console","log","bytesToMB","bytes","memoryUsage","rssMB","rss","heapTotalMB","heapTotal","heapUsedMB","heapUsed","externalMB","external","arrayBuffersMB","arrayBuffers","totalMemoryMB","totalMemory","toFixed","metadata","Error"],"mappings":";;;;sBAA4B;2BACF;wBACK;yBACgB;iEAC1B;8BACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAEfA;WAAAA;;SAAAA;IAAAA,aAAf,oBAAA;QACE,MAAMC,MAAM,MAAMC,iBAAW,CAACC,MAAM,CAACC,oBAAS,EAAE,CAAC;QACjDH,IAAII,UAAU,CAAC;YAAEC,QAAQ;YAAMC,aAAa;QAAK;QAEjDN,IAAIO,cAAc,CAChB,IAAIC,sBAAc,CAAC;YACjBC,WAAW;YACXC,sBAAsB;YACtBC,WAAW;QACb;QAGFX,IAAIY,GAAG,CAACC,iBAAQ,CAACC,UAAU;QAE3B,MAAMC,SAAS,IAAIC,wBAAe,GAC/BC,QAAQ,CAAC,cACTC,cAAc,CAAC,0BACfC,UAAU,CAAC,OACXC,MAAM,CAAC,aACPC,aAAa,GACbC,KAAK;QAER,MAAMC,WAAWC,sBAAa,CAACC,cAAc,CAACzB,KAAKe;QACnDS,sBAAa,CAACE,KAAK,CAAC,QAAQ1B,KAAKuB;QACjC,MAAM,IAAII,2BAAa,GAAGD,KAAK,CAAC1B;QAChC,MAAMA,IAAI4B,MAAM,CAACC,QAAQC,GAAG,CAACC,IAAI,EAAE;QACnCC,QAAQC,GAAG,CAAC,CAAC,gBAAgB,EAAEJ,QAAQC,GAAG,CAACC,IAAI,CAAC,GAAG,CAAC;QAEpD,SAASG,UAAUC,KAAK;YACtB,OAAOA,QAAS,CAAA,OAAO,IAAG;QAC5B;QAEA,MAAMC,cAAcP,QAAQO,WAAW;QAEvC,MAAMC,QAAQH,UAAUE,YAAYE,GAAG;QACvC,MAAMC,cAAcL,UAAUE,YAAYI,SAAS;QACnD,MAAMC,aAAaP,UAAUE,YAAYM,QAAQ;QACjD,MAAMC,aAAaT,UAAUE,YAAYQ,QAAQ;QACjD,MAAMC,iBAAiBX,UAAUE,YAAYU,YAAY;QAEzD,MAAMC,gBACJV,QAAQE,cAAcE,aAAaE,aAAaE;QAElDb,QAAQC,GAAG,CAAC;YACVe,aAAaD,cAAcE,OAAO,CAAC,KAAK;QAC1C;IACF;WA9CelD;;AAgDfA;AACA,SAASmD;IACP,MAAM,IAAIC,MAAM;AAClB"}