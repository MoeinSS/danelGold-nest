{"version":3,"sources":["../../src/auction/auction.controller.ts"],"sourcesContent":["import { Controller, Get, Post, Put, Delete, Body, Param, ParseIntPipe, Query, DefaultValuePipe, Req } from '@nestjs/common';\r\nimport { AuctionsService } from '@/auction/auction.service';\r\nimport { UpdateAuctionDto } from '@/auction/dto/UpdateAuction.dto';\r\nimport { CreateAuctionDto } from '@/auction/dto/CreateAuction.dto';\r\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\r\nimport { Roles } from '@/common/decorators/roles.decorator';\r\nimport { UserRole } from '@/user/entity/user.entity';\r\nimport { ParticipateAuctionDto } from '@/auction/dto/ParticipateAuction.dto';\r\nimport { Request } from 'express';\r\n\r\n@ApiTags('Auction')\r\n@ApiBearerAuth()\r\n@Controller('auctions')\r\nexport class AuctionsController {\r\n  constructor(private readonly auctionsService: AuctionsService) {}\r\n\r\n  @Roles(UserRole.ADMIN)\r\n  @Post()\r\n  create(\r\n    @Body() createAuctionDto: CreateAuctionDto\r\n  ){\r\n    return this.auctionsService.createAuction(createAuctionDto);\r\n  }\r\n\r\n  @Post('participate/:id')\r\n  async participateAuction(\r\n    @Param('id') auctionId: number,\r\n    @Body() participateAuctionDto: ParticipateAuctionDto,\r\n    @Req() req: Request\r\n  ){\r\n    const userPhone = (req.user as any).result.phone;\r\n    return this.auctionsService.participateAuction(\r\n      auctionId, \r\n      participateAuctionDto, \r\n      userPhone\r\n    );\r\n  }\r\n\r\n  @Roles(UserRole.ADMIN)\r\n  @Put('/:id')\r\n  updateAuction(\r\n    @Param('id') id: number, \r\n    @Body() updateAuctionDto: UpdateAuctionDto\r\n  ){\r\n    return this.auctionsService.updateAuction(id, updateAuctionDto);\r\n  }\r\n\r\n  @Roles(UserRole.ADMIN)\r\n  @Delete('/:id')\r\n  remove(\r\n    @Param('id',ParseIntPipe) id: number\r\n  ){\r\n    return this.auctionsService.deleteAuction(id);\r\n  }\r\n\r\n  @Get('all')\r\n  getAllAuctions(\r\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\r\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\r\n    @Query('search') search?: string,\r\n    @Query('sortBy') sort?: string,\r\n    @Query('sortOrder') sortOrder?: 'ASC' | 'DESC',\r\n  ){\r\n    const query = { page, limit, search, sort, sortOrder };\r\n    return this.auctionsService.getAllAuctions(query);\r\n  }\r\n\r\n  @Get('/:id')\r\n  getAuctionById(\r\n    @Param('id',ParseIntPipe) id: number\r\n  ) {\r\n    return this.auctionsService.getAuctionById(id);\r\n  }\r\n\r\n}\r\n"],"names":["AuctionsController","create","createAuctionDto","auctionsService","createAuction","participateAuction","auctionId","participateAuctionDto","req","userPhone","user","result","phone","updateAuction","id","updateAuctionDto","remove","deleteAuction","getAllAuctions","page","limit","search","sort","sortOrder","query","getAuctionById","constructor","ADMIN","DefaultValuePipe"],"mappings":";;;;+BAaaA;;;eAAAA;;;wBAb+F;gCAC5E;kCACC;kCACA;yBACM;gCACjB;4BACG;uCACa;yBACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKjB,IAAA,AAAMA,qBAAN,MAAMA;IAKXC,OACE,AAAQC,gBAAkC,EAC3C;QACC,OAAO,IAAI,CAACC,eAAe,CAACC,aAAa,CAACF;IAC5C;IAGMG,mBACJ,AAAaC,SAAiB,EAC9B,AAAQC,qBAA4C,EACpD,AAAOC,GAAY;;eAJrB,oBAAA;YAME,MAAMC,YAAY,AAACD,IAAIE,IAAI,CAASC,MAAM,CAACC,KAAK;YAChD,OAAO,MAAKT,eAAe,CAACE,kBAAkB,CAC5CC,WACAC,uBACAE;QAEJ;;IAIAI,cACE,AAAaC,EAAU,EACvB,AAAQC,gBAAkC,EAC3C;QACC,OAAO,IAAI,CAACZ,eAAe,CAACU,aAAa,CAACC,IAAIC;IAChD;IAIAC,OACE,AAA0BF,EAAU,EACrC;QACC,OAAO,IAAI,CAACX,eAAe,CAACc,aAAa,CAACH;IAC5C;IAGAI,eACE,AAAsDC,IAAY,EAClE,AAAwDC,KAAa,EACrE,AAAiBC,MAAe,EAChC,AAAiBC,IAAa,EAC9B,AAAoBC,SAA0B,EAC/C;QACC,MAAMC,QAAQ;YAAEL;YAAMC;YAAOC;YAAQC;YAAMC;QAAU;QACrD,OAAO,IAAI,CAACpB,eAAe,CAACe,cAAc,CAACM;IAC7C;IAGAC,eACE,AAA0BX,EAAU,EACpC;QACA,OAAO,IAAI,CAACX,eAAe,CAACsB,cAAc,CAACX;IAC7C;IA1DAY,YAAY,AAAiBvB,eAAgC,CAAE;aAAlCA,kBAAAA;IAAmC;AA4DlE;;oDA1DkBwB;;;;;;;;;;;;;;;;;;;;;;;oDAsBAA;;;;;;;;;;;;oDASAA;;;;;;;;;;;gDAUKC,wBAAgB,CAAC;iDAChBA,wBAAgB,CAAC"}