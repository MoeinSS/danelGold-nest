{"version":3,"sources":["../../src/collection/collection.controller.ts"],"sourcesContent":["import { Controller, Get, Post, Put, Delete, Body, Param, Req, ParseIntPipe, Query, DefaultValuePipe } from '@nestjs/common';\r\nimport { CollectionsService } from '@/collection/collection.service';\r\nimport { CollectionEntity } from '@/collection/entity/collection.entity';\r\nimport { Request } from 'express';\r\nimport { CreateCollectionDto } from '@/collection/dto/CreateCollection.dto';\r\nimport { UpdateCollectionDto } from '@/collection/dto/UpdateCollection.dto';\r\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\r\n\r\n@ApiTags('Collection')\r\n@ApiBearerAuth()\r\n@Controller('collection')\r\nexport class CollectionsController {\r\n  constructor(private readonly collectionsService: CollectionsService) {}\r\n\r\n  @Post()\r\n  async createCollection(\r\n    @Req () req: Request,\r\n    @Body() createCollectionDto:CreateCollectionDto\r\n  ){\r\n    const creatorPhone = (req.user as any).result.phone;\r\n    return await this.collectionsService.createCollection(createCollectionDto,creatorPhone)\r\n  }\r\n\r\n  @Post(':/collectionId/add/nftId')\r\n  async addNftToCollection(\r\n    @Param('collectionId',ParseIntPipe) collectionId:number,\r\n    @Param('nftId',ParseIntPipe) nftId:number,\r\n    @Req () req:Request\r\n  ){\r\n    const currentOwnerPhone = (req.user as any).result.phone;\r\n    return await this.collectionsService.addNftToCollection(\r\n      collectionId,\r\n      nftId,\r\n      currentOwnerPhone\r\n    )\r\n  }\r\n\r\n  @Post(':/collectionId/remove/nftId')\r\n  async removeNftFromCollection(\r\n    @Param('nftId',ParseIntPipe) nftId:number,\r\n    @Req () req:Request\r\n  ){\r\n    const currentOwnerPhone = (req.user as any).result.phone;\r\n    return await this.collectionsService.removeNftFromCollection(\r\n      nftId,\r\n      currentOwnerPhone\r\n    )\r\n  }\r\n\r\n  @Put('/:id')\r\n  async updateCollection(\r\n    @Param(':collectionId',ParseIntPipe) collectionId: number,\r\n    @Req () req: Request,\r\n    @Body() updateCollectionDto: UpdateCollectionDto\r\n  ){\r\n    const currentOwnerPhone = (req.user as any).result.phone;\r\n    const currentUserRoles = (req.user as any).result.role;\r\n    return await this.collectionsService.updateCollection(\r\n      collectionId,\r\n      updateCollectionDto,\r\n      currentOwnerPhone,\r\n      currentUserRoles\r\n    )\r\n  }\r\n\r\n  @Get('all')\r\n  async getAllCollections(\r\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\r\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\r\n    @Query('search') search?: string,\r\n    @Query('sortBy') sort?: string,\r\n    @Query('sortOrder') sortOrder?: 'ASC' | 'DESC',\r\n  ){\r\n    const query = { page, limit, search, sort, sortOrder };\r\n    return await this.collectionsService.getAllCollections(query);\r\n  }\r\n\r\n  @Get('/:id')\r\n  async getCollectionById(\r\n    @Param('collectionId',ParseIntPipe) collectionId:number\r\n  ){\r\n    return await this.collectionsService.getAuctionById(collectionId)\r\n  }\r\n\r\n}\r\n"],"names":["CollectionsController","createCollection","req","createCollectionDto","creatorPhone","user","result","phone","collectionsService","addNftToCollection","collectionId","nftId","currentOwnerPhone","removeNftFromCollection","updateCollection","updateCollectionDto","currentUserRoles","role","getAllCollections","page","limit","search","sort","sortOrder","query","getCollectionById","getAuctionById","constructor","DefaultValuePipe"],"mappings":";;;;+BAWaA;;;eAAAA;;;wBAX+F;mCACzE;yBAEX;qCACY;qCACA;yBACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKhC,IAAA,AAAMA,wBAAN,MAAMA;IAILC,iBACJ,AAAQC,GAAY,EACpB,AAAQC,mBAAuC;;eAHjD,oBAAA;YAKE,MAAMC,eAAe,AAACF,IAAIG,IAAI,CAASC,MAAM,CAACC,KAAK;YACnD,OAAO,MAAM,MAAKC,kBAAkB,CAACP,gBAAgB,CAACE,qBAAoBC;QAC5E;;IAGMK,mBACJ,AAAoCC,YAAmB,EACvD,AAA6BC,KAAY,EACzC,AAAQT,GAAW;;eAJrB,oBAAA;YAME,MAAMU,oBAAoB,AAACV,IAAIG,IAAI,CAASC,MAAM,CAACC,KAAK;YACxD,OAAO,MAAM,MAAKC,kBAAkB,CAACC,kBAAkB,CACrDC,cACAC,OACAC;QAEJ;;IAGMC,wBACJ,AAA6BF,KAAY,EACzC,AAAQT,GAAW;;eAHrB,oBAAA;YAKE,MAAMU,oBAAoB,AAACV,IAAIG,IAAI,CAASC,MAAM,CAACC,KAAK;YACxD,OAAO,MAAM,MAAKC,kBAAkB,CAACK,uBAAuB,CAC1DF,OACAC;QAEJ;;IAGME,iBACJ,AAAqCJ,YAAoB,EACzD,AAAQR,GAAY,EACpB,AAAQa,mBAAwC;;eAJlD,oBAAA;YAME,MAAMH,oBAAoB,AAACV,IAAIG,IAAI,CAASC,MAAM,CAACC,KAAK;YACxD,MAAMS,mBAAmB,AAACd,IAAIG,IAAI,CAASC,MAAM,CAACW,IAAI;YACtD,OAAO,MAAM,MAAKT,kBAAkB,CAACM,gBAAgB,CACnDJ,cACAK,qBACAH,mBACAI;QAEJ;;IAGME,kBACJ,AAAsDC,IAAY,EAClE,AAAwDC,KAAa,EACrE,AAAiBC,MAAe,EAChC,AAAiBC,IAAa,EAC9B,AAAoBC,SAA0B;;eANhD,oBAAA;YAQE,MAAMC,QAAQ;gBAAEL;gBAAMC;gBAAOC;gBAAQC;gBAAMC;YAAU;YACrD,OAAO,MAAM,MAAKf,kBAAkB,CAACU,iBAAiB,CAACM;QACzD;;IAGMC,kBACJ,AAAoCf,YAAmB;;eAFzD,oBAAA;YAIE,OAAO,MAAM,MAAKF,kBAAkB,CAACkB,cAAc,CAAChB;QACtD;;IAtEAiB,YAAY,AAAiBnB,kBAAsC,CAAE;aAAxCA,qBAAAA;IAAyC;AAwExE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDAjBuBoB,wBAAgB,CAAC;iDAChBA,wBAAgB,CAAC"}