{"version":3,"sources":["../../src/transaction/transaction.service.ts"],"sourcesContent":["import { Injectable, NotFoundException } from '@nestjs/common';\r\nimport { Repository } from 'typeorm';\r\nimport { TransactionEntity } from './entity/transaction.entity';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { ApiResponses, createResponse } from '@/utils/response.util';\r\n\r\n@Injectable()\r\nexport class TransactionService {\r\n  constructor(\r\n    @InjectRepository(TransactionEntity)\r\n    private readonly transactionRepository: Repository<TransactionEntity>,\r\n  ) {}\r\n  \r\n  async getByTransaction(\r\n    transaction: string,\r\n  ): Promise<ApiResponses<TransactionEntity>> {\r\n    const exitingTransaction = await this.transactionRepository.findOneBy({\r\n      transaction: transaction,\r\n    });\r\n    console.log(`exitingTransaction ${JSON.stringify(exitingTransaction)}`);\r\n    if (!exitingTransaction) {\r\n      throw new NotFoundException('این تراکنش وجود ندارد');\r\n    }\r\n\r\n    return createResponse(200, exitingTransaction);\r\n  }\r\n}\r\n"],"names":["TransactionService","getByTransaction","transaction","exitingTransaction","transactionRepository","findOneBy","console","log","JSON","stringify","NotFoundException","createResponse","constructor"],"mappings":";;;;+BAOaA;;;eAAAA;;;wBAPiC;yBACnB;mCACO;0BACD;8BACY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGtC,IAAA,AAAMA,qBAAN,MAAMA;IAMLC,iBACJC,WAAmB;;eADrB,oBAAA;YAGE,MAAMC,qBAAqB,MAAM,MAAKC,qBAAqB,CAACC,SAAS,CAAC;gBACpEH,aAAaA;YACf;YACAI,QAAQC,GAAG,CAAC,CAAC,mBAAmB,EAAEC,KAAKC,SAAS,CAACN,oBAAoB,CAAC;YACtE,IAAI,CAACA,oBAAoB;gBACvB,MAAM,IAAIO,yBAAiB,CAAC;YAC9B;YAEA,OAAOC,IAAAA,4BAAc,EAAC,KAAKR;QAC7B;;IAjBAS,YACE,AACiBR,qBAAoD,CACrE;aADiBA,wBAAAA;IAChB;AAeL"}