{"version":3,"sources":["../../src/payment/zarinpal.service.ts"],"sourcesContent":["import { HttpService } from '@nestjs/axios';\r\nimport { Injectable, HttpException } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class ZarinpalService {\r\n  private readonly merchantId: string = process.env.ZARINPAL_MERCHANT_ID;\r\n  private readonly zarinpalRequestUrl: string =\r\n    process.env.ZARINPAL_LINK_REQUEST;\r\n  private readonly zarinpalVerifyUrl: string = process.env.ZARINPAL_LINK_VERIFY;\r\n  private readonly callbackUrl: string = process.env.CALLBACKURL_ZARIPAL;\r\n\r\n  constructor(private readonly httpService: HttpService) {}\r\n\r\n  async createPaymentRequest(\r\n    amount: number,\r\n    transaction: string,\r\n    type: 'wallet' | 'order' | 'debtDueDate',\r\n  ): Promise<{ url: string; authority: string }> {\r\n    const callbackurl = `${this.callbackUrl}/${type}?transaction=${transaction}`;\r\n\r\n    const roundedAmount = Math.round(amount);\r\n\r\n    const response = await this.httpService\r\n      .post(this.zarinpalRequestUrl, {\r\n        merchant_id: this.merchantId,\r\n        amount: roundedAmount * 10, // تبدیل تومان به ریال\r\n        callback_url: callbackurl,\r\n        description: 'توضیحات پرداخت',\r\n      })\r\n      .toPromise();\r\n\r\n    const data = response.data.data;\r\n    const errors = response.data.errors;\r\n\r\n    if (errors.length > 0) {\r\n      throw new HttpException(\r\n        {\r\n          status: errors[0].code,\r\n          message: errors[0].message,\r\n        },\r\n        400,\r\n      );\r\n    }\r\n\r\n    if (data.code !== 100) {\r\n      throw new HttpException(\r\n        {\r\n          status: data.code,\r\n          message: 'خطا در ایجاد درخواست پرداخت',\r\n        },\r\n        400,\r\n      );\r\n    }\r\n\r\n    return {\r\n      url: `https://www.zarinpal.com/pg/StartPay/${data.authority}`,\r\n      authority: data.authority,\r\n    };\r\n  }\r\n\r\n  async verifyPayment(amount: number, authority: string): Promise<any> {\r\n    const response = await this.httpService\r\n      .post(this.zarinpalVerifyUrl, {\r\n        merchant_id: this.merchantId,\r\n        amount: amount * 10, // تبدیل تومان به ریال\r\n        authority: authority,\r\n      })\r\n      .toPromise();\r\n\r\n    console.log(JSON.stringify(`response  >>> ${response}`));\r\n\r\n    console.log(JSON.stringify(`response.data  >>> ${response.data}`));\r\n\r\n    const data = response.data.data;\r\n    const errors = response.data.errors;\r\n\r\n    console.log(JSON.stringify(response.data.errors));\r\n\r\n    if (errors.length > 0) {\r\n      throw new HttpException(\r\n        {\r\n          status: errors[0].code,\r\n          message: errors[0].message,\r\n        },\r\n        400,\r\n      );\r\n    }\r\n\r\n    return data;\r\n  }\r\n}\r\n"],"names":["ZarinpalService","createPaymentRequest","amount","transaction","type","callbackurl","callbackUrl","roundedAmount","Math","round","response","httpService","post","zarinpalRequestUrl","merchant_id","merchantId","callback_url","description","toPromise","data","errors","length","HttpException","status","code","message","url","authority","verifyPayment","zarinpalVerifyUrl","console","log","JSON","stringify","constructor","process","env","ZARINPAL_MERCHANT_ID","ZARINPAL_LINK_REQUEST","ZARINPAL_LINK_VERIFY","CALLBACKURL_ZARIPAL"],"mappings":";;;;+BAIaA;;;eAAAA;;;uBAJe;wBACc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGnC,IAAA,AAAMA,kBAAN,MAAMA;IASLC,qBACJC,MAAc,EACdC,WAAmB,EACnBC,IAAwC;;eAH1C,oBAAA;YAKE,MAAMC,cAAc,CAAC,EAAE,MAAKC,WAAW,CAAC,CAAC,EAAEF,KAAK,aAAa,EAAED,YAAY,CAAC;YAE5E,MAAMI,gBAAgBC,KAAKC,KAAK,CAACP;YAEjC,MAAMQ,WAAW,MAAM,MAAKC,WAAW,CACpCC,IAAI,CAAC,MAAKC,kBAAkB,EAAE;gBAC7BC,aAAa,MAAKC,UAAU;gBAC5Bb,QAAQK,gBAAgB;gBACxBS,cAAcX;gBACdY,aAAa;YACf,GACCC,SAAS;YAEZ,MAAMC,OAAOT,SAASS,IAAI,CAACA,IAAI;YAC/B,MAAMC,SAASV,SAASS,IAAI,CAACC,MAAM;YAEnC,IAAIA,OAAOC,MAAM,GAAG,GAAG;gBACrB,MAAM,IAAIC,qBAAa,CACrB;oBACEC,QAAQH,MAAM,CAAC,EAAE,CAACI,IAAI;oBACtBC,SAASL,MAAM,CAAC,EAAE,CAACK,OAAO;gBAC5B,GACA;YAEJ;YAEA,IAAIN,KAAKK,IAAI,KAAK,KAAK;gBACrB,MAAM,IAAIF,qBAAa,CACrB;oBACEC,QAAQJ,KAAKK,IAAI;oBACjBC,SAAS;gBACX,GACA;YAEJ;YAEA,OAAO;gBACLC,KAAK,CAAC,qCAAqC,EAAEP,KAAKQ,SAAS,CAAC,CAAC;gBAC7DA,WAAWR,KAAKQ,SAAS;YAC3B;QACF;;IAEMC,cAAc1B,MAAc,EAAEyB,SAAiB;;eAArD,oBAAA;YACE,MAAMjB,WAAW,MAAM,MAAKC,WAAW,CACpCC,IAAI,CAAC,MAAKiB,iBAAiB,EAAE;gBAC5Bf,aAAa,MAAKC,UAAU;gBAC5Bb,QAAQA,SAAS;gBACjByB,WAAWA;YACb,GACCT,SAAS;YAEZY,QAAQC,GAAG,CAACC,KAAKC,SAAS,CAAC,CAAC,cAAc,EAAEvB,SAAS,CAAC;YAEtDoB,QAAQC,GAAG,CAACC,KAAKC,SAAS,CAAC,CAAC,mBAAmB,EAAEvB,SAASS,IAAI,CAAC,CAAC;YAEhE,MAAMA,OAAOT,SAASS,IAAI,CAACA,IAAI;YAC/B,MAAMC,SAASV,SAASS,IAAI,CAACC,MAAM;YAEnCU,QAAQC,GAAG,CAACC,KAAKC,SAAS,CAACvB,SAASS,IAAI,CAACC,MAAM;YAE/C,IAAIA,OAAOC,MAAM,GAAG,GAAG;gBACrB,MAAM,IAAIC,qBAAa,CACrB;oBACEC,QAAQH,MAAM,CAAC,EAAE,CAACI,IAAI;oBACtBC,SAASL,MAAM,CAAC,EAAE,CAACK,OAAO;gBAC5B,GACA;YAEJ;YAEA,OAAON;QACT;;IA9EAe,YAAY,AAAiBvB,WAAwB,CAAE;aAA1BA,cAAAA;aANZI,aAAqBoB,QAAQC,GAAG,CAACC,oBAAoB;aACrDxB,qBACfsB,QAAQC,GAAG,CAACE,qBAAqB;aAClBT,oBAA4BM,QAAQC,GAAG,CAACG,oBAAoB;aAC5DjC,cAAsB6B,QAAQC,GAAG,CAACI,mBAAmB;IAEd;AA+E1D"}