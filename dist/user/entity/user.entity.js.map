{"version":3,"sources":["../../../src/user/entity/user.entity.ts"],"sourcesContent":["import { Entity, Column, CreateDateColumn, UpdateDateColumn, OneToMany, Relation, Generated, PrimaryColumn, OneToOne } from 'typeorm';\r\nimport { CollectionEntity } from '@/collection/entity/collection.entity';\r\nimport { NFT } from '@/nft/entity/nft.entity';\r\nimport { Auction } from '@/auction/entity/auction.entity';\r\nimport { SupportTicket } from '@/support-ticket/entity/support-ticket.entity';\r\nimport { ForumTopic } from '@/forum/entity/forum-topic.entity';\r\nimport { ForumPost } from '@/forum/entity/forum-post.entity';\r\nimport { Bid } from '@/auction/entity/auctionBid.entity';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { Wallet } from '@/wallet/entity/wallet.entity';\r\nimport { Token } from '@/auth/token/entity/token.entity';\r\nimport { Subscribe } from '@/subscribe/entity/subscribe.entity';\r\nimport { UserDetail } from '@/user-detail/entity/userDetail.entity';\r\n\r\nexport enum UserRole {\r\n  USER = 'user',\r\n  ADMIN = 'admin',\r\n}\r\n\r\n@Entity({ name: 'users'})\r\nexport class User {\r\n  @Column()\r\n  @Generated('increment')\r\n  id: number;\r\n\r\n  @PrimaryColumn({ type: 'varchar', unique: true, length: 11 })\r\n  phone: string;\r\n\r\n  @Column({ type: 'varchar' })\r\n  firstName: string;\r\n\r\n  @Column({ type: 'varchar' })\r\n  lastName: string;\r\n\r\n  @Column({ type: 'text' })\r\n  password: string;\r\n\r\n  @Column({ type: 'text' })\r\n  email: string;\r\n\r\n  @Column({ type: 'varchar', nullable: true })\r\n  imageUrl: string | null;\r\n\r\n  @Column({ nullable: true })\r\n  walletAddress: string;\r\n\r\n  @Column({\r\n    type: 'enum',\r\n    enum: UserRole,\r\n    default: UserRole.USER,\r\n  })\r\n  role: UserRole;\r\n\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n\r\n  @UpdateDateColumn()\r\n  updatedAt: Date;\r\n\r\n  @Column({ type: 'timestamptz', nullable: true })\r\n  lastLogin: Date | null;\r\n\r\n  @OneToMany(() => Token, (token) => token.user)\r\n  @ApiProperty({ type: () => [Token] })\r\n  tokens: Relation<Token[]>;\r\n\r\n  @OneToOne(() => Wallet, (wallets) => wallets.user)\r\n  @ApiProperty({ type: () => Wallet })\r\n  wallets: Relation<Wallet>;\r\n\r\n  @OneToMany(() => UserDetail, (userDetail) => userDetail.user)\r\n  @ApiProperty({ type: () => [UserDetail] })\r\n  userDetail: Relation<UserDetail[]>;\r\n\r\n  @OneToMany(() => Subscribe, (subscribes) => subscribes.user)\r\n  @ApiProperty({ type: () => [Subscribe] })\r\n  subscribes: Relation<Subscribe[]>;\r\n\r\n  @OneToMany(() => CollectionEntity, (collectionEntities) => collectionEntities.creator)\r\n  collectionEntities: Relation<CollectionEntity[]>;\r\n\r\n  @OneToMany(() => NFT, (nfts) => nfts.creator)\r\n  createdNfts: Relation<NFT[]>;\r\n\r\n  @OneToMany(() => NFT, (nfts) => nfts.owner)\r\n  ownedNfts: NFT[];\r\n\r\n  @OneToMany(() => Auction, (auctions) => auctions.creator)\r\n  auctions: Relation<Auction[]>;\r\n\r\n  @OneToMany(() => Bid, bid => bid.user)\r\n  bids: Relation<Bid[]>;\r\n\r\n  @OneToMany(() => (SupportTicket), tickets => tickets.user)\r\n  supportTickets: Relation<SupportTicket[]>;\r\n\r\n  @OneToMany(() => (ForumTopic), topics => topics.user)\r\n  forumTopics: Relation<ForumTopic[]>;\r\n\r\n  @OneToMany(() => (ForumPost), posts => posts.user)\r\n  forumPosts: Relation<ForumPost[]>;\r\n}"],"names":["User","UserRole","type","unique","length","nullable","enum","default","Token","token","user","Wallet","wallets","UserDetail","userDetail","Subscribe","subscribes","CollectionEntity","collectionEntities","creator","NFT","nfts","owner","Auction","auctions","Bid","bid","SupportTicket","tickets","ForumTopic","topics","ForumPost","posts","name"],"mappings":";;;;;;;;;;;IAoBaA,IAAI;eAAJA;;;;;;yBApB+G;kCAC3F;2BACb;+BACI;qCACM;kCACH;iCACD;kCACN;yBACQ;8BACL;6BACD;iCACI;kCACC;;;;;;;;;;;UAEfC;;;GAAAA,aAAAA;AAML,IAAA,AAAMD,OAAN,MAAMA;AAiFb;;;;;;;;QA5EmBE,MAAM;QAAWC,QAAQ;QAAMC,QAAQ;;;;;;QAG9CF,MAAM;;;;;;QAGNA,MAAM;;;;;;QAGNA,MAAM;;;;;;QAGNA,MAAM;;;;;;QAGNA,MAAM;QAAWG,UAAU;;;;;;QAG3BA,UAAU;;;;;;QAIlBH,MAAM;QACNI,MAAML;QACNM,OAAO;;;;;;;;;;;;;;QAUCL,MAAM;QAAeG,UAAU;;;;;gCAGxBG,kBAAK,GAAGC,QAAUA,MAAMC,IAAI;;QAC9BR,MAAM,IAAM;gBAACM,kBAAK;aAAC;;;;;+BAGlBG,oBAAM,GAAGC,UAAYA,QAAQF,IAAI;;QAClCR,MAAM,IAAMS,oBAAM;;;;;gCAGhBE,4BAAU,GAAGC,aAAeA,WAAWJ,IAAI;;QAC7CR,MAAM,IAAM;gBAACW,4BAAU;aAAC;;;;;gCAGtBE,0BAAS,GAAGC,aAAeA,WAAWN,IAAI;;QAC5CR,MAAM,IAAM;gBAACa,0BAAS;aAAC;;;;;gCAGrBE,kCAAgB,GAAGC,qBAAuBA,mBAAmBC,OAAO;;;;gCAGpEC,cAAG,GAAGC,OAASA,KAAKF,OAAO;;;;gCAG3BC,cAAG,GAAGC,OAASA,KAAKC,KAAK;;;;gCAGzBC,sBAAO,GAAGC,WAAaA,SAASL,OAAO;;;;gCAGvCM,qBAAG,GAAEC,MAAOA,IAAIhB,IAAI;;;;gCAGnBiB,kCAAa,GAAGC,UAAWA,QAAQlB,IAAI;;;;gCAGvCmB,4BAAU,GAAGC,SAAUA,OAAOpB,IAAI;;;;gCAGlCqB,0BAAS,GAAGC,QAASA,MAAMtB,IAAI;;;;;QAhFzCuB,MAAM"}