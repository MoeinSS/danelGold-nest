{"version":3,"sources":["../src/app.module.ts"],"sourcesContent":["import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\r\nimport { APP_FILTER, APP_GUARD, APP_INTERCEPTOR } from '@nestjs/core';\r\nimport { ConfigModule, ConfigService } from '@nestjs/config';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { ThrottlerModule } from '@nestjs/throttler';\r\nimport { ServeStaticModule } from '@nestjs/serve-static';\r\nimport typeormDataSource from './config/data-source';\r\nimport { join } from 'path';\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { AuthModule } from './User/auth/auth.module';\r\nimport { OtpModule } from './User/auth/otp/otp.module';\r\nimport { JwtAuthGuard } from './User/auth/guards/jwt.guard';\r\nimport { RolesGuard } from './User/auth/guards/roles.guard';\r\nimport { JwtStrategy } from './User/auth/strategy/jwt.strategy';\r\nimport { TokenModule } from './User/auth/token/token.module';\r\nimport { UserModule } from './User/user/user.module';\r\nimport { SessionModule } from './session/session.module';\r\nimport { SubscribeModule } from './User/subscribe/subscribe.module';\r\nimport { UserDetailModule } from './User/user-detail/userDetail.module';\r\nimport { UploadModule } from './upload/upload.module';\r\nimport { LoggingInterceptor } from './common/utils/logger.interseptor';\r\nimport { AllExceptionsFilter } from './common/exeptionFilters/global.error';\r\nimport { UserAgentMiddleware } from './common/middleware/user-agent.middleware';\r\nimport { AuctionModule } from './Market/auction/auction.module';\r\nimport { CollectionEntityModule } from './Market/collection/collection.module';\r\nimport { NFTModule } from './NFT/nft/nft.module';\r\nimport { ForumModule } from './Social/forum/forum.module';\r\nimport { SupportTicketModule } from './Social/Support-Ticket/ST/support-ticket.module';\r\nimport { UserService } from './User/user/user.service';\r\nimport { User } from './User/user/entity/user.entity';\r\nimport { Token } from './User/auth/token/entity/token.entity';\r\nimport { SmsService } from './services/sms.service';\r\nimport { IPFSService } from './services/IPFS.service';\r\nimport { PinataModule } from './NFT/pinta/pinta.module';\r\nimport { StoriesModule } from './Social/Story/stories/stories.module';\r\nimport { PostsModule } from './Social/Post/posts/posts.module';\r\nimport { Story } from './Social/Story/stories/entity/stories.entity';\r\nimport { Comment } from './Social/Comment/comment/entity/comment.entity';\r\nimport { Reply } from './Social/Comment/replyComment/entity/reply.entity';\r\nimport { likeComment } from './Social/Comment/like-comment/entity/like-comment.entity';\r\nimport { Post } from './Social/Post/posts/entity/posts.entity';\r\nimport { likePost } from './Social/Post/like-post/entity/like-post.entity';\r\nimport { likeStory } from './Social/Story/like-story/entity/like-story.entity';\r\nimport { RSTModule } from './Social/Support-Ticket/RST/RST.module';\r\n\r\n\r\n@Module({\r\n  imports: [\r\n    ThrottlerModule.forRoot([\r\n      {\r\n        ttl: 60000,\r\n        limit: 50,\r\n      },\r\n    ]),\r\n    ServeStaticModule.forRoot({\r\n      rootPath: join(__dirname, '..', 'public'),\r\n      serveRoot: '/public',\r\n    }),\r\n    ConfigModule.forRoot({\r\n      envFilePath: '.develop.env',\r\n    }),\r\n    TypeOrmModule.forRootAsync({\r\n      imports: [ConfigModule],\r\n      inject: [ConfigService],\r\n\r\n      useFactory: (configService: ConfigService) => {\r\n        const synchronize = configService.get('NODE_ENV') === 'development';\r\n\r\n        console.log('synchronize ' + synchronize);\r\n        return {\r\n          ...typeormDataSource.options,\r\n          autoLoadEntities: true,\r\n        };\r\n      },\r\n    }),\r\n    TypeOrmModule.forFeature([\r\n      User,\r\n      Token,\r\n      Story,\r\n      Comment,\r\n      likeComment,\r\n      Reply,\r\n      Post,\r\n      likePost,\r\n      likeStory\r\n    ]),\r\n    AuctionModule,\r\n    CollectionEntityModule,\r\n    NFTModule,\r\n    ForumModule,\r\n    SupportTicketModule,\r\n    AuthModule,\r\n    UserModule,\r\n    UserDetailModule,\r\n    OtpModule,\r\n    SessionModule,\r\n    UploadModule,\r\n    SubscribeModule,\r\n    TokenModule,\r\n    PinataModule,\r\n    StoriesModule,\r\n    PostsModule,\r\n    RSTModule,\r\n  ],\r\n  controllers: [AppController,],\r\n  providers: [\r\n    AppService,\r\n    UserService,\r\n    IPFSService,\r\n    SmsService,\r\n    JwtStrategy,\r\n    {\r\n      provide: APP_GUARD,\r\n      useClass: JwtAuthGuard,\r\n    },\r\n    {\r\n      provide: APP_GUARD,\r\n      useClass: RolesGuard,\r\n    },\r\n    {\r\n      provide: APP_INTERCEPTOR,\r\n      useClass: LoggingInterceptor,\r\n    },\r\n    {\r\n      provide: APP_FILTER,\r\n      useClass: AllExceptionsFilter,\r\n    },\r\n  ],\r\n  exports:[IPFSService]\r\n})\r\nexport class AppModule implements NestModule {\r\n  configure(consumer: MiddlewareConsumer) {\r\n    consumer.apply(UserAgentMiddleware).forRoutes('*');\r\n  }\r\n}\r\n"],"names":["AppModule","configure","consumer","apply","UserAgentMiddleware","forRoutes","imports","ThrottlerModule","forRoot","ttl","limit","ServeStaticModule","rootPath","join","__dirname","serveRoot","ConfigModule","envFilePath","TypeOrmModule","forRootAsync","inject","ConfigService","useFactory","configService","synchronize","get","console","log","typeormDataSource","options","autoLoadEntities","forFeature","User","Token","Story","Comment","likeComment","Reply","Post","likePost","likeStory","AuctionModule","CollectionEntityModule","NFTModule","ForumModule","SupportTicketModule","AuthModule","UserModule","UserDetailModule","OtpModule","SessionModule","UploadModule","SubscribeModule","TokenModule","PinataModule","StoriesModule","PostsModule","RSTModule","controllers","AppController","providers","AppService","UserService","IPFSService","SmsService","JwtStrategy","provide","APP_GUARD","useClass","JwtAuthGuard","RolesGuard","APP_INTERCEPTOR","LoggingInterceptor","APP_FILTER","AllExceptionsFilter","exports"],"mappings":";;;;+BAmIaA;;;eAAAA;;;wBAnI0C;sBACA;wBACX;yBACd;2BACE;6BACE;mEACJ;sBACT;+BACS;4BACH;4BACA;2BACD;0BACG;4BACF;6BACC;6BACA;4BACD;+BACG;iCACE;kCACC;8BACJ;mCACM;6BACC;qCACA;+BACN;kCACS;2BACb;6BACE;qCACQ;6BACR;4BACP;6BACC;4BACK;6BACC;6BACC;+BACC;6BACF;+BACN;+BACE;6BACF;mCACM;6BACP;gCACI;iCACC;2BACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFnB,IAAA,AAAMA,YAAN,MAAMA;IACXC,UAAUC,QAA4B,EAAE;QACtCA,SAASC,KAAK,CAACC,wCAAmB,EAAEC,SAAS,CAAC;IAChD;AACF;;;QAvFEC,SAAS;YACPC,0BAAe,CAACC,OAAO,CAAC;gBACtB;oBACEC,KAAK;oBACLC,OAAO;gBACT;aACD;YACDC,8BAAiB,CAACH,OAAO,CAAC;gBACxBI,UAAUC,IAAAA,UAAI,EAACC,WAAW,MAAM;gBAChCC,WAAW;YACb;YACAC,oBAAY,CAACR,OAAO,CAAC;gBACnBS,aAAa;YACf;YACAC,sBAAa,CAACC,YAAY,CAAC;gBACzBb,SAAS;oBAACU,oBAAY;iBAAC;gBACvBI,QAAQ;oBAACC,qBAAa;iBAAC;gBAEvBC,YAAY,CAACC;oBACX,MAAMC,cAAcD,cAAcE,GAAG,CAAC,gBAAgB;oBAEtDC,QAAQC,GAAG,CAAC,iBAAiBH;oBAC7B,OAAO,wCACFI,mBAAiB,CAACC,OAAO;wBAC5BC,kBAAkB;;gBAEtB;YACF;YACAZ,sBAAa,CAACa,UAAU,CAAC;gBACvBC,gBAAI;gBACJC,kBAAK;gBACLC,oBAAK;gBACLC,sBAAO;gBACPC,8BAAW;gBACXC,kBAAK;gBACLC,iBAAI;gBACJC,wBAAQ;gBACRC,0BAAS;aACV;YACDC,4BAAa;YACbC,wCAAsB;YACtBC,oBAAS;YACTC,wBAAW;YACXC,wCAAmB;YACnBC,sBAAU;YACVC,sBAAU;YACVC,kCAAgB;YAChBC,oBAAS;YACTC,4BAAa;YACbC,0BAAY;YACZC,gCAAe;YACfC,wBAAW;YACXC,yBAAY;YACZC,4BAAa;YACbC,wBAAW;YACXC,oBAAS;SACV;QACDC,aAAa;YAACC,4BAAa;SAAE;QAC7BC,WAAW;YACTC,sBAAU;YACVC,wBAAW;YACXC,wBAAW;YACXC,sBAAU;YACVC,wBAAW;YACX;gBACEC,SAASC,eAAS;gBAClBC,UAAUC,sBAAY;YACxB;YACA;gBACEH,SAASC,eAAS;gBAClBC,UAAUE,sBAAU;YACtB;YACA;gBACEJ,SAASK,qBAAe;gBACxBH,UAAUI,qCAAkB;YAC9B;YACA;gBACEN,SAASO,gBAAU;gBACnBL,UAAUM,gCAAmB;YAC/B;SACD;QACDC,SAAQ;YAACZ,wBAAW;SAAC"}