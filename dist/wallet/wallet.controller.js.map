{"version":3,"sources":["../../src/wallet/wallet.controller.ts"],"sourcesContent":["import { WalletService } from './wallet.service';\r\nimport { Request, Response } from 'express';\r\nimport { ApiBearerAuth, ApiQuery, ApiTags } from '@nestjs/swagger';\r\nimport { \r\n  Body, \r\n  Controller, \r\n  DefaultValuePipe, \r\n  Get, \r\n  Param, \r\n  ParseIntPipe, \r\n  Post, \r\n  Query, \r\n  Req, \r\n  Res \r\n} from '@nestjs/common';\r\nimport { Roles } from '@/common/decorators/roles.decorator';\r\nimport { UserRole } from '@/user/entity/user.entity';\r\nimport { Public } from '@/common/decorators/public.decorator';\r\n\r\n@ApiTags('Wallet')\r\n@ApiBearerAuth()\r\n@Controller('')\r\nexport class WalletController {\r\n  constructor(private readonly walletService: WalletService) {}\r\n\r\n  @Get('/wallet/balance')\r\n  async getBalance(@Req() req: Request) {\r\n    const userPhone = (req.user as any).result.phone;\r\n    return this.walletService.getBalance(userPhone);\r\n  }\r\n\r\n  @Roles(UserRole.ADMIN)\r\n  @Post('/wallet/increase')\r\n  async increaseBalance(\r\n    @Body('userPhone') userPhone: string,\r\n    @Body('amount') amount: number,\r\n  ) {\r\n    return await this.walletService.increaseBalance(userPhone, amount);\r\n  }\r\n\r\n  @Roles(UserRole.ADMIN)\r\n  @Post('/wallet/decrease')\r\n  async decreaseBalance(\r\n    @Body('userPhone') userPhone: string,\r\n    @Body('amount') amount: number,\r\n  ) {\r\n    return await this.walletService.decreaseBalance(userPhone, amount);\r\n  }\r\n\r\n  @Post('/wallet/charge')\r\n  async chargeWallet(\r\n    @Body('amount') amount: number, \r\n    @Req() req: Request\r\n  ){\r\n    const userPhone = (req.user as any).result.phone;\r\n    return this.walletService.chargeWallet(userPhone, amount);\r\n  }\r\n\r\n  @Public()\r\n  @Get('verify/wallet')\r\n  async verifyWalletPayment(\r\n    @Query('transaction') transactionId: string,\r\n    @Query('Status') status: string,\r\n    @Res() res: Response,\r\n  ) {\r\n    return this.walletService.verifyPayment(transactionId, status, res);\r\n  }\r\n\r\n  @ApiQuery({ name: 'page', required: false })\r\n  @ApiQuery({ name: 'limit', required: false })\r\n  @ApiQuery({ name: 'search', required: false })\r\n  @ApiQuery({ name: 'sort', required: false })\r\n  @ApiQuery({ name: 'sortOrder', required: false })\r\n  @Get('/wallet/all')\r\n  async getAllCourses(\r\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\r\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\r\n    @Query('search') search?: string,\r\n    @Query('sortBy') sort?: string,\r\n    @Query('sortOrder') sortOrder?: 'ASC' | 'DESC',\r\n  ) {\r\n    const query = { page, limit, search, sort, sortOrder };\r\n    return await this.walletService.getAllWallets(query);\r\n  }\r\n\r\n  @ApiQuery({ name: 'page', required: false })\r\n  @ApiQuery({ name: 'limit', required: false })\r\n  @ApiQuery({ name: 'search', required: false })\r\n  @ApiQuery({ name: 'sort', required: false })\r\n  @ApiQuery({ name: 'sortOrder', required: false })\r\n  @Get('/wallet/allOrder')\r\n  async getAllWalletTransactions(\r\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\r\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\r\n    @Query('search') search?: string,\r\n    @Query('sortBy') sort?: string,\r\n    @Query('sortOrder') sortOrder?: 'ASC' | 'DESC',\r\n  ) {\r\n    const query = { page, limit, search, sort, sortOrder };\r\n    return this.walletService.getAllWalletOrders(query);\r\n  }\r\n\r\n  @ApiQuery({ name: 'page', required: false })\r\n  @ApiQuery({ name: 'limit', required: false })\r\n  @ApiQuery({ name: 'sort', required: false })\r\n  @ApiQuery({ name: 'sortOrder', required: false })\r\n  @Get('wallet/order/:phone')\r\n  async getWalletTransactionsByUser(\r\n    @Param('phone') phone: string,\r\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\r\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\r\n    @Query('sortBy') sort?: string,\r\n    @Query('sortOrder') sortOrder?: 'ASC' | 'DESC',\r\n  ){\r\n    const query = { page, limit, sort, sortOrder };\r\n    return this.walletService.getWalletOrdersByUser(phone,query);\r\n  }\r\n\r\n}\r\n"],"names":["WalletController","getBalance","req","userPhone","user","result","phone","walletService","increaseBalance","amount","decreaseBalance","chargeWallet","verifyWalletPayment","transactionId","status","res","verifyPayment","getAllCourses","page","limit","search","sort","sortOrder","query","getAllWallets","getAllWalletTransactions","getAllWalletOrders","getWalletTransactionsByUser","getWalletOrdersByUser","constructor","ADMIN","name","required","DefaultValuePipe"],"mappings":"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"}