{"version":3,"sources":["../../src/nft/nft.controller.ts"],"sourcesContent":["import { Controller, Get, Post, Put, Delete, Body, Param, Req, Query, DefaultValuePipe, ParseIntPipe } from '@nestjs/common';\r\nimport { NFTsService } from '@/nft/nft.service';\r\nimport { NFT } from '@/nft/entity/nft.entity';\r\nimport { MintNFTDto } from './dto/MintNFT.dto';\r\nimport { Request } from 'express';\r\nimport { UpdateNFTDto } from './dto/UpdateNFT.dto';\r\n\r\n@Controller('nft')\r\nexport class NFTsController {\r\n  constructor(private readonly nftsService: NFTsService) {}\r\n\r\n  @Post()\r\n  async MintNFT(\r\n    @Req () req: Request,\r\n    @Body() mintNFTDto: MintNFTDto\r\n  ){\r\n    const creatorPhone = (req.user as any).result.phone\r\n    return await this.nftsService.mintNFT(mintNFTDto,creatorPhone);\r\n  }\r\n\r\n  @Put('/:id')\r\n  async updateMint(\r\n    @Param('nftId',ParseIntPipe) nftId: number,\r\n    @Req () req: Request,\r\n    @Body() updateNFTDto: UpdateNFTDto\r\n  ){\r\n    const currentOwnerPhone = (req.user as any).result.phone;\r\n    const currentUserRoles = (req.user as any).result.role;\r\n    return await this.nftsService.updateNFT(\r\n      nftId,\r\n      updateNFTDto,\r\n      currentOwnerPhone,\r\n      currentUserRoles\r\n    )\r\n  }\r\n\r\n  @Delete('/:id')\r\n  async burnNFT(\r\n    @Param('nftId',ParseIntPipe) nftId:number,\r\n    @Req () req:Request\r\n  ){\r\n    const currentOwnerPhone = (req.user as any).result.phone;\r\n    const currentUserRoles = (req.user as any).result.role;\r\n    return await this.nftsService.burnNFT(\r\n      nftId,\r\n      currentOwnerPhone,\r\n      currentUserRoles\r\n    )\r\n  }\r\n\r\n  @Get('/:id')\r\n  async getNFTById(\r\n    @Param('nftId',ParseIntPipe) nftId: number\r\n  ){\r\n    return this.nftsService.getNFTById(nftId);\r\n  }\r\n}\r\n"],"names":["NFTsController","MintNFT","req","mintNFTDto","creatorPhone","user","result","phone","nftsService","mintNFT","updateMint","nftId","updateNFTDto","currentOwnerPhone","currentUserRoles","role","updateNFT","burnNFT","getNFTById","constructor"],"mappings":";;;;+BAQaA;;;eAAAA;;;wBAR+F;4BAChF;4BAED;yBACH;8BACK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGtB,IAAA,AAAMA,iBAAN,MAAMA;IAILC,QACJ,AAAQC,GAAY,EACpB,AAAQC,UAAsB;;eAHhC,oBAAA;YAKE,MAAMC,eAAe,AAACF,IAAIG,IAAI,CAASC,MAAM,CAACC,KAAK;YACnD,OAAO,MAAM,MAAKC,WAAW,CAACC,OAAO,CAACN,YAAWC;QACnD;;IAGMM,WACJ,AAA6BC,KAAa,EAC1C,AAAQT,GAAY,EACpB,AAAQU,YAA0B;;eAJpC,oBAAA;YAME,MAAMC,oBAAoB,AAACX,IAAIG,IAAI,CAASC,MAAM,CAACC,KAAK;YACxD,MAAMO,mBAAmB,AAACZ,IAAIG,IAAI,CAASC,MAAM,CAACS,IAAI;YACtD,OAAO,MAAM,MAAKP,WAAW,CAACQ,SAAS,CACrCL,OACAC,cACAC,mBACAC;QAEJ;;IAGMG,QACJ,AAA6BN,KAAY,EACzC,AAAQT,GAAW;;eAHrB,oBAAA;YAKE,MAAMW,oBAAoB,AAACX,IAAIG,IAAI,CAASC,MAAM,CAACC,KAAK;YACxD,MAAMO,mBAAmB,AAACZ,IAAIG,IAAI,CAASC,MAAM,CAACS,IAAI;YACtD,OAAO,MAAM,MAAKP,WAAW,CAACS,OAAO,CACnCN,OACAE,mBACAC;QAEJ;;IAGMI,WACJ,AAA6BP,KAAa;;eAF5C,oBAAA;YAIE,OAAO,MAAKH,WAAW,CAACU,UAAU,CAACP;QACrC;;IA9CAQ,YAAY,AAAiBX,WAAwB,CAAE;aAA1BA,cAAAA;IAA2B;AA+C1D"}