{"version":3,"sources":["../../../src/auth/strategy/jwt.strategy.ts"],"sourcesContent":["import { Injectable, UnauthorizedException } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { UserService } from '@/user/user.service';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(\r\n    private readonly userService: UserService,\r\n    private readonly configService: ConfigService,\r\n  ) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      secretOrKey: configService.get<string>('JWT_SECRET'),\r\n    });\r\n  }\r\n\r\n  async validate(payload: any) {\r\n    const user = await this.userService.getUserByPhone(payload.phone);\r\n    if (!user) {\r\n      throw new UnauthorizedException('شما دسترسی ندارید');\r\n    }\r\n    return user;\r\n  }\r\n  \r\n}\r\n"],"names":["JwtStrategy","PassportStrategy","Strategy","validate","payload","user","userService","getUserByPhone","phone","UnauthorizedException","constructor","configService","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","get"],"mappings":";;;;+BAOaA;;;eAAAA;;;wBAPqC;0BACjB;6BACI;wBACP;6BACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGrB,IAAA,AAAMA,cAAN,MAAMA,oBAAoBC,IAAAA,0BAAgB,EAACC,qBAAQ;IAWlDC,SAASC,OAAY;;eAA3B,oBAAA;YACE,MAAMC,OAAO,MAAM,MAAKC,WAAW,CAACC,cAAc,CAACH,QAAQI,KAAK;YAChE,IAAI,CAACH,MAAM;gBACT,MAAM,IAAII,6BAAqB,CAAC;YAClC;YACA,OAAOJ;QACT;;IAhBAK,YACE,AAAiBJ,WAAwB,EACzC,AAAiBK,aAA4B,CAC7C;QACA,KAAK,CAAC;YACJC,gBAAgBC,uBAAU,CAACC,2BAA2B;YACtDC,aAAaJ,cAAcK,GAAG,CAAS;QACzC,SANiBV,cAAAA,kBACAK,gBAAAA;IAMnB;AAUF"}