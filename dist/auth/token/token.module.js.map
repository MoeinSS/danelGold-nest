{"version":3,"sources":["../../../src/auth/token/token.module.ts"],"sourcesContent":["// src/auth/token/token.module.ts\r\n\r\nimport { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { Token } from './entity/token.entity';\r\nimport { ConfigModule, ConfigService } from '@nestjs/config';\r\nimport { JwtModule, JwtService } from '@nestjs/jwt';\r\nimport { TokenService } from './token.service';\r\nimport { JwtStrategy } from '@/auth/strategy/jwt.strategy';\r\nimport { UserModule } from '@/user/user.module';\r\nimport { TokenController } from './controller.token';\r\nimport { User } from '@/user/entity/user.entity';\r\nimport { UserService } from '@/user/user.service';\r\nimport { SmsService } from '@/services/sms.service';\r\n\r\n@Module({\r\n  imports: [\r\n    UserModule,\r\n    TypeOrmModule.forFeature([Token,User]),\r\n    ConfigModule,\r\n    JwtModule.registerAsync({\r\n      imports: [ConfigModule],\r\n      inject: [ConfigService],\r\n      useFactory: async (configService: ConfigService) => ({\r\n        secret: configService.get<string>('JWT_SECRET'),\r\n        signOptions: { expiresIn: '7d' },\r\n      }),\r\n    }),\r\n  ],\r\n  controllers: [TokenController],\r\n  providers: [TokenService, UserService,SmsService,JwtStrategy],\r\n  exports: [TokenService],\r\n})\r\nexport class TokenModule {}\r\n"],"names":["TokenModule","imports","UserModule","TypeOrmModule","forFeature","Token","User","ConfigModule","JwtModule","registerAsync","inject","ConfigService","useFactory","configService","secret","get","signOptions","expiresIn","controllers","TokenController","providers","TokenService","UserService","SmsService","JwtStrategy","exports"],"mappings":"AAAA,iCAAiC;;;;;+BAiCpBA;;;eAAAA;;;wBA/BU;yBACO;6BACR;wBACsB;qBACN;8BACT;6BACD;4BACD;iCACK;4BACX;6BACO;4BACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBpB,IAAA,AAAMA,cAAN,MAAMA;AAAa;;;QAjBxBC,SAAS;YACPC,sBAAU;YACVC,sBAAa,CAACC,UAAU,CAAC;gBAACC,kBAAK;gBAACC,gBAAI;aAAC;YACrCC,oBAAY;YACZC,cAAS,CAACC,aAAa,CAAC;gBACtBR,SAAS;oBAACM,oBAAY;iBAAC;gBACvBG,QAAQ;oBAACC,qBAAa;iBAAC;gBACvBC,UAAU;+BAAE,oBAAA,UAAOC;wBAAkC,OAAA;4BACnDC,QAAQD,cAAcE,GAAG,CAAS;4BAClCC,aAAa;gCAAEC,WAAW;4BAAK;wBACjC;;oCAHmBJ;;;;YAIrB;SACD;QACDK,aAAa;YAACC,gCAAe;SAAC;QAC9BC,WAAW;YAACC,0BAAY;YAAEC,wBAAW;YAACC,sBAAU;YAACC,wBAAW;SAAC;QAC7DC,SAAS;YAACJ,0BAAY;SAAC"}