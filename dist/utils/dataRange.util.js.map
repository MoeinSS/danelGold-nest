{"version":3,"sources":["../../src/utils/dataRange.util.ts"],"sourcesContent":["import moment from 'moment';\r\nmoment.locale('fa');\r\n\r\nexport interface DateRangeQuery {\r\n  today?: string;\r\n  yesterday?: string;\r\n  last7Days?: string;\r\n  last30Days?: string;\r\n  lastYear?: string;\r\n  startDate?: string;\r\n  endDate?: string;\r\n  month?: string;\r\n}\r\n\r\nexport class DateRangeUtil {\r\n  static getDateRangeFromQuery(query: DateRangeQuery): { startDate: string; endDate: string } {\r\n    const {\r\n      today,\r\n      yesterday,\r\n      last7Days,\r\n      last30Days,\r\n      lastYear,\r\n      startDate: queryStartDate,\r\n      endDate: queryEndDate,\r\n      month,\r\n    } = query;\r\n\r\n    if (today) {\r\n      return {\r\n        startDate: moment().startOf('day').toISOString(),\r\n        endDate: moment().endOf('day').toISOString(),\r\n      };\r\n    } else if (yesterday) {\r\n      return {\r\n        startDate: moment().subtract(1, 'days').startOf('day').toISOString(),\r\n        endDate: moment().subtract(1, 'days').endOf('day').toISOString(),\r\n      };\r\n    } else if (last7Days) {\r\n      return {\r\n        startDate: moment().subtract(7, 'days').startOf('day').toISOString(),\r\n        endDate: moment().endOf('day').toISOString(),\r\n      };\r\n    } else if (last30Days) {\r\n      return {\r\n        startDate: moment().subtract(30, 'days').startOf('day').toISOString(),\r\n        endDate: moment().endOf('day').toISOString(),\r\n      };\r\n    } else if (lastYear) {\r\n      return {\r\n        startDate: moment().subtract(1, 'years').startOf('year').toISOString(),\r\n        endDate: moment().endOf('year').toISOString(),\r\n      };\r\n    } else if (queryStartDate && queryEndDate) {\r\n      return {\r\n        startDate: moment(queryStartDate).startOf('day').toISOString(),\r\n        endDate: moment(queryEndDate).endOf('day').toISOString(),\r\n      };\r\n    } else if (month) {\r\n      return {\r\n        startDate: moment().startOf('month').toISOString(),\r\n        endDate: moment().endOf('month').toISOString(),\r\n      };\r\n    } else {\r\n      return {\r\n        startDate: moment().startOf('day').toISOString(),\r\n        endDate: moment().endOf('day').toISOString(),\r\n      };\r\n    }\r\n  }\r\n}\r\n"],"names":["DateRangeUtil","moment","locale","getDateRangeFromQuery","query","today","yesterday","last7Days","last30Days","lastYear","startDate","queryStartDate","endDate","queryEndDate","month","startOf","toISOString","endOf","subtract"],"mappings":";;;;+BAcaA;;;eAAAA;;;+DAdM;;;;;;AACnBC,eAAM,CAACC,MAAM,CAAC;AAaP,IAAA,AAAMF,gBAAN,MAAMA;IACX,OAAOG,sBAAsBC,KAAqB,EAA0C;QAC1F,MAAM,EACJC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,UAAU,EACVC,QAAQ,EACRC,WAAWC,cAAc,EACzBC,SAASC,YAAY,EACrBC,KAAK,EACN,GAAGV;QAEJ,IAAIC,OAAO;YACT,OAAO;gBACLK,WAAWT,IAAAA,eAAM,IAAGc,OAAO,CAAC,OAAOC,WAAW;gBAC9CJ,SAASX,IAAAA,eAAM,IAAGgB,KAAK,CAAC,OAAOD,WAAW;YAC5C;QACF,OAAO,IAAIV,WAAW;YACpB,OAAO;gBACLI,WAAWT,IAAAA,eAAM,IAAGiB,QAAQ,CAAC,GAAG,QAAQH,OAAO,CAAC,OAAOC,WAAW;gBAClEJ,SAASX,IAAAA,eAAM,IAAGiB,QAAQ,CAAC,GAAG,QAAQD,KAAK,CAAC,OAAOD,WAAW;YAChE;QACF,OAAO,IAAIT,WAAW;YACpB,OAAO;gBACLG,WAAWT,IAAAA,eAAM,IAAGiB,QAAQ,CAAC,GAAG,QAAQH,OAAO,CAAC,OAAOC,WAAW;gBAClEJ,SAASX,IAAAA,eAAM,IAAGgB,KAAK,CAAC,OAAOD,WAAW;YAC5C;QACF,OAAO,IAAIR,YAAY;YACrB,OAAO;gBACLE,WAAWT,IAAAA,eAAM,IAAGiB,QAAQ,CAAC,IAAI,QAAQH,OAAO,CAAC,OAAOC,WAAW;gBACnEJ,SAASX,IAAAA,eAAM,IAAGgB,KAAK,CAAC,OAAOD,WAAW;YAC5C;QACF,OAAO,IAAIP,UAAU;YACnB,OAAO;gBACLC,WAAWT,IAAAA,eAAM,IAAGiB,QAAQ,CAAC,GAAG,SAASH,OAAO,CAAC,QAAQC,WAAW;gBACpEJ,SAASX,IAAAA,eAAM,IAAGgB,KAAK,CAAC,QAAQD,WAAW;YAC7C;QACF,OAAO,IAAIL,kBAAkBE,cAAc;YACzC,OAAO;gBACLH,WAAWT,IAAAA,eAAM,EAACU,gBAAgBI,OAAO,CAAC,OAAOC,WAAW;gBAC5DJ,SAASX,IAAAA,eAAM,EAACY,cAAcI,KAAK,CAAC,OAAOD,WAAW;YACxD;QACF,OAAO,IAAIF,OAAO;YAChB,OAAO;gBACLJ,WAAWT,IAAAA,eAAM,IAAGc,OAAO,CAAC,SAASC,WAAW;gBAChDJ,SAASX,IAAAA,eAAM,IAAGgB,KAAK,CAAC,SAASD,WAAW;YAC9C;QACF,OAAO;YACL,OAAO;gBACLN,WAAWT,IAAAA,eAAM,IAAGc,OAAO,CAAC,OAAOC,WAAW;gBAC9CJ,SAASX,IAAAA,eAAM,IAAGgB,KAAK,CAAC,OAAOD,WAAW;YAC5C;QACF;IACF;AACF"}