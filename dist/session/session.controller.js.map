{"version":3,"sources":["../../src/session/session.controller.ts"],"sourcesContent":["import {\r\n  Controller,\r\n  //   Delete,\r\n  //   Get,\r\n  //   Query,\r\n  //   Req,\r\n  //   UnauthorizedException,\r\n} from '@nestjs/common';\r\n// import { SessionService } from './session.service';\r\n// import { Request } from 'express';\r\n\r\n@Controller('sessions')\r\nexport class SessionController {\r\n  //   constructor(private readonly sessionService: SessionService) {}\r\n  //   @Get()\r\n  //   async getActiveSessions(@Req() req: Request) {\r\n  //     const phone = req.session.phone;\r\n  //     if (!phone) {\r\n  //       throw new UnauthorizedException('User not logged in');\r\n  //     }\r\n  //     return this.sessionService.getActiveSessions(phone);\r\n  //   }\r\n  //   @Delete()\r\n  //   async deleteSession(@Req() req: Request, @Query('id') sessionId: string) {\r\n  //     const phone = req.session.phone;\r\n  //     if (!phone) {\r\n  //       throw new UnauthorizedException('User not logged in');\r\n  //     }\r\n  //     const sessions = await this.sessionService.getActiveSessions(phone);\r\n  //     const session = sessions.find((s) => s.id === sessionId);\r\n  //     if (!session) {\r\n  //       throw new UnauthorizedException('Invalid session ID');\r\n  //     }\r\n  //     await this.sessionService.deleteSession(sessionId);\r\n  //   }\r\n}\r\n"],"names":["SessionController"],"mappings":";;;;+BAYaA;;;eAAAA;;;wBALN;;;;;;;AAKA,IAAA,AAAMA,oBAAN,MAAMA;AAuBb"}